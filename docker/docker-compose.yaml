version: "3"
services:
  acme-explorer:
    container_name: "acme-explorer-dev"
    build:
      context: ../
      dockerfile: Dockerfile
    networks:
      dev-network:
    ports:
      - "8080:8080"
    volumes:
      - "logsvol:/usr/src/app/logs"
      - "../.:/usr/src/app/."
    restart: on-failure
    depends_on:
      - mongo
    environment:
      - NODE_ENV=${NODE_ENV}
      - DBHOST=mongo
      - INFLUXHOST=influxdb
      - FRONT_PORT=${FRONT_PORT}
  mongo:
    image: "mongo"
    networks:
      dev-network:
        aliases:
          - "mongo"
    ports:
      - 27017:27017
    volumes:
      - "datavol:/data/db"
  influxdb:
    image: 'influxdb:1.8.4-alpine'
    container_name: influxdb
    networks:
      dev-network:
        aliases:
          - influxdb
    ports:
      - 8086:8086
    volumes:
      - 'influxdb_volume:/var/lib/influxdb'
    restart: 'unless-stopped'
  grafana:
    container_name: grafana
    image: grafana/grafana:7.5.3
    environment:
      - NODE_ENV=production
    networks:
      dev-network:
        aliases:
          - dashboard
    ports:
      - 3000:3000
    volumes:
      - 'grafana_volume:/var/lib/grafana'
      - './grafana/grafana.ini:/etc/grafana/grafana.ini'
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - './grafana/dashboards/:/etc/dashboards'
    restart: 'unless-stopped'

volumes:
  datavol:
  logsvol:
  influxdb_volume:
  grafana_volume:

networks:
  dev-network:
